[{"content":"July 02, 2022 Filter data in python with high order functions This project (Platzi) is to learn How to filter data from a list of dictionaries. The goal is to use the python high order functions filter() and map() to achieve the task. Note: You will require python \u0026gt; v3.9 to finish the 100% of the examples. However if you have only python 3 you can achieve the 90%. Don\u0026rsquo;t worry, let\u0026rsquo;s practice.\nThe filter( ) , map ( ), and reduce ( ) functions simplifies the process of working with lists and dictionaries.\nList of dictionaries This is the list of dictionaries provided by Platzi where we will perform some filter tasks. Take a look to the name of the dictionary DATA is capitalized, this means the list of dictionary will be a constant along the program.\nDATA = [ { \u0026#39;name\u0026#39;: \u0026#39;Facundo\u0026#39;, \u0026#39;age\u0026#39;: 72, \u0026#39;organization\u0026#39;: \u0026#39;Platzi\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Technical Coach\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;python\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Luisana\u0026#39;, \u0026#39;age\u0026#39;: 33, \u0026#39;organization\u0026#39;: \u0026#39;Globant\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;UX Designer\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;javascript\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;HÃ©ctor\u0026#39;, \u0026#39;age\u0026#39;: 19, \u0026#39;organization\u0026#39;: \u0026#39;Platzi\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Associate\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;ruby\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Gabriel\u0026#39;, \u0026#39;age\u0026#39;: 20, \u0026#39;organization\u0026#39;: \u0026#39;Platzi\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Associate\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;javascript\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Isabella\u0026#39;, \u0026#39;age\u0026#39;: 30, \u0026#39;organization\u0026#39;: \u0026#39;Platzi\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;QA Manager\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;java\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Karo\u0026#39;, \u0026#39;age\u0026#39;: 23, \u0026#39;organization\u0026#39;: \u0026#39;Everis\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Backend Developer\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;python\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Ariel\u0026#39;, \u0026#39;age\u0026#39;: 32, \u0026#39;organization\u0026#39;: \u0026#39;Rappi\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Support\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Juan\u0026#39;, \u0026#39;age\u0026#39;: 17, \u0026#39;organization\u0026#39;: \u0026#39;\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Student\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;go\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Pablo\u0026#39;, \u0026#39;age\u0026#39;: 32, \u0026#39;organization\u0026#39;: \u0026#39;Master\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Human Resources Manager\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;python\u0026#39;, }, { \u0026#39;name\u0026#39;: \u0026#39;Lorena\u0026#39;, \u0026#39;age\u0026#39;: 56, \u0026#39;organization\u0026#39;: \u0026#39;Python Organization\u0026#39;, \u0026#39;position\u0026#39;: \u0026#39;Language Maker\u0026#39;, \u0026#39;language\u0026#39;: \u0026#39;python\u0026#39;, }, ] Filter the python programmers Goal: Filter only the python programmers from the DATAlist using list comprehensions\nMethod 1: Use list comprehensions def run(): all_python_devs = [worker[\u0026#39;name\u0026#39;] for worker in DATA if worker[\u0026#39;language\u0026#39;] == \u0026#39;python\u0026#39;] for worker in all_python_devs: print(worker) if __name__ == \u0026#39;__main__\u0026#39;: run() Filter all the adults (age \u0026gt; 18 year) Goal: Filter all the adults workers from the DATAlist using filter and print their names\nFilter is a high order function in Python : filter and map Use lambda functions Method 1: Use filter (high order function) Using the filter()function requires lambda worker: worker['age'] \u0026gt; 18 ,DATA to extract the adults workers. However, doing the following code we are extracting all the dictionary from DATA. Therefore we will require the map()function to select only the names of the adult workers.\ndef run(): adults = list(filter(lambda worker: worker[\u0026#39;age\u0026#39;] \u0026gt; 18 ,DATA)) for worker in adults: print(worker) if __name__ == \u0026#39;__main__\u0026#39;: run() Method 2: User filter() + map() (high order functions) To achieve the goal we need to pass the filter() and map() functions to extract first all the dictionaries with the adult workers and second to extract the names of the adult workers.\ndef run(): adults = list(filter(lambda worker: worker[\u0026#39;age\u0026#39;] \u0026gt; 18 ,DATA)) adults = list(map(lambda worker: worker[\u0026#39;name\u0026#39;], DATA)) for worker in adults: print(worker) if __name__ == \u0026#39;__main__\u0026#39;: run() Filter old people (age \u0026gt; 70 ) Goal:\nCreate a new dictionary old_people with workers (age \u0026gt; 70 ) , but include the \u0026lsquo;old\u0026rsquo;:True or \u0026lsquo;old\u0026rsquo;: False into each worker dictionary. Method 1: Use map() When we apply the map() function by filtering with worker['age'] \u0026gt; 70we will have a list()with True and False value. Thus, we need to create the new dictionary\ndef run(): old_people = (list(map(lambda worker: worker[\u0026#39;age\u0026#39;] \u0026gt; 70, DATA))) for worker in old_people: print(worker) if __name__ == \u0026#39;__main__\u0026#39;: run() Method 2: Use map() + sum of dictionaries To add a new entry to the dictionary we will use the | command\nNote: This feature only works with python \u0026gt; 3.9\ndef run(): old_people = list(map(lambda worker: worker | {\u0026#39;old\u0026#39; : worker[\u0026#39;age\u0026#39;] \u0026gt; 70 }, DATA)) for worker in old_people: print(worker) if __name__ == \u0026#39;__main__\u0026#39;: run() Extra: Look about high order functions in YouTube This is an extra step, don\u0026rsquo;t jump this pass. Every time you learn a new concept practice some examples but remember if you want to secure your learning. You must integrate it to you workflow. The high order functions will simplify your list tasks for filtering data.\nIf you love this content, you can share a Cup of Coffee ! Your help is essential to continue with this project\n","permalink":"https://jesuscapistran.github.io/post/2022-07-02/","summary":"July 02, 2022 Filter data in python with high order functions This project (Platzi) is to learn How to filter data from a list of dictionaries. The goal is to use the python high order functions filter() and map() to achieve the task. Note: You will require python \u0026gt; v3.9 to finish the 100% of the examples. However if you have only python 3 you can achieve the 90%. Don\u0026rsquo;t worry, let\u0026rsquo;s practice.","title":"20220702 - Filter data in python with high order functions"},{"content":"This time I want to share the direction where de blog is deployed, all of this is public.\n","permalink":"https://jesuscapistran.github.io/post/third_post/","summary":"This time I want to share the direction where de blog is deployed, all of this is public.","title":"Third_post"},{"content":"Once I load the Hugo site in my local machine, its time to configure and to deploy into Github. For this task I do a google search and find the following video tutorial:\n","permalink":"https://jesuscapistran.github.io/post/hugo_tutorial/","summary":"Once I load the Hugo site in my local machine, its time to configure and to deploy into Github. For this task I do a google search and find the following video tutorial:","title":"Hugo_tutorial"},{"content":"In this space I have the intention to store my notes related to my coding journey. The challenge of implementing Python into my scientific career comes after getting my Ph.D. degree. At that moment, I saw that all the data I had generated related to materials characterization (thin-films) were buried in my hard drive. Therefore, to overcome the lost of data I have to learn new skills for data management. : While I was looking for alternatives. I found that having a coding culture will be a solution because in this XXI century, DATA is the most valuable resource I will have. With this hyphothesis in my mind, I decide to challentge myself by learning Python and Git as the initial point of my joruney.\nWhy do you decide to learn Python?\n","permalink":"https://jesuscapistran.github.io/post/welcome_code_notes/","summary":"In this space I have the intention to store my notes related to my coding journey. The challenge of implementing Python into my scientific career comes after getting my Ph.D. degree. At that moment, I saw that all the data I had generated related to materials characterization (thin-films) were buried in my hard drive. Therefore, to overcome the lost of data I have to learn new skills for data management. : While I was looking for alternatives.","title":"My coding notes"}]